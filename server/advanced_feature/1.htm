<html>
	<head>
		<title>改变Worker进程的用户/组</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>改变Worker进程的用户/组</h1>

				<p>
					在某些情况下，主进程需要使用Root来启动，比如需要监听80端口。这时Worker进程的业务代码也会运行在root用户下，这是非常不安全的。
					业务代码的漏洞可能会导致整个服务器被攻破，所以需要将Worker进程所属用户和组改为其他用户。
					在PHP中使用posix系列函数即可完成此操作。可在swoole的onWorkerStart回调中加入以下代码：
				</p>
				<pre class="brush: php;">$user = posix_getpwnam('www-data');
posix_setuid($user['uid']);
posix_setgid($user['gid']);
</pre>
				<h2>重定向根目录</h2>
				<p>
					默认是没有重定向的，在PHP代码中访问/etc/目录，就是指文件系统的/etc/，这样是不安全的。比如PHP代码中误操作执行rm
					-rf /。会带来严重的后果。 可以使用chroot函数，将根目录重定向到另外一个安全的目录。
				</p>
				<pre class="brush: php;">chroot('/tmp/root/');
</pre>
				<h2>使用swoole配置项</h2>
				<pre class="brush: php;">$server->set(array('chroot' => '/tmp/root', 'user' => 'www-data', 'group' => 'www-data'));
</pre>
			</article>

		</div>
	</body>
</html>
