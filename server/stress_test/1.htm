<html>
<head>
<title>Nginx/Golang/Swoole/Node.js的性能对比</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>Nginx/Golang/Swoole/Node.js的性能对比</h1>
            
            <p>通过ab工具分别压测nginx swoole node.js golang的http
                server，并观察结果。 web server都是输出一行It work!
                硬件环境是一台8G/4核酷睿I5CPU的笔记本电脑，型号是Thinkpad T430.</p>
            <pre class="brush: php;">Nginx   ab -c 100 -n 100000 http://localhost/index.html
Swoole  ab -c 100 -n 100000 http://127.0.0.1:8848/
Node.js ab -c 100 -n 100000 http://127.0.0.1:8080/
Golang  ab -c 100 -n 100000 http://127.0.0.1:8080/
</pre>
            <p>本次测试使用的软件版本如下：</p>
            <pre class="brush: php;">nginx version: nginx/1.2.6 (Ubuntu)
go version go1.1.1 linux/amd64
swoole-1.5.4
node.js-0.11.3-pre
</pre>
            <p>代码在./code目录中。</p>
            <h2>QPS对比</h2>
            <pre class="brush: php;">Nginx:      Requests per second:    23770.74 [#/sec] (mean)
Golang:     Requests per second:    21807.00 [#/sec] (mean)
Swoole:     Requests per second:    19711.22 [#/sec] (mean)
Node.js:    Requests per second:    6680.53 [#/sec] (mean)
</pre>
            <h2>内存占用对比</h2>
            <p>Golang 运行多次压测后内存从2920K上升至5580K，再继续压测不会上升</p>
            <p>Node.js运行多次后内存一直在涨，怀疑有轻微内存泄露。从开始运行的5930K，到最后的6060K。</p>
            <p>Nginx的4个worker进程，内存占用一直稳定在820K。</p>
            <p>Swoole的主进程内存占用一直稳定在3200K，多次压测内存占用没有任何增加。Worker进程的内存有小幅增加。</p>
            <p>通过设置Swoole的max_request参数，worker进程的生命周期是可以控制的，生命周期结束后会自动回收所有内存，所以轻微的内存泄露问题也不大。</p>
            <h2>TCP长连接的维持能力</h2>
            <p>Nginx、Golang、Swoole、node.js都是使用epoll/kqueue作为事件轮询机制的。维持多少长连接与程序代码本身没有任何关系，取决于操作系统的内存大小。</p>
            <h2>结果评价</h2>
            <p>Nginx、Golang、Swoole都是多线程Reactor的，可以充分利用多核，所以成绩是node.js的数倍。
                Swoole中的PHP代码需要编译为opcode来执行，每条opcode都是一次函数调用。语言的执行效率效率比C语言（Nginx）,Golang这种编译型的语言差一些。
                Node.js的http模块不是多线程的，无法利用多核，结果最差。这里并不是说node.js的性能差，使用第三方的node扩展cluster也可以使node.js变成多进程。</p>
            <blockquote>
                <p>在最新的swoole-1.7.6+版本中，基准压力测试swoole无论是短连接还是长连接，均已超过了Golang。在下一个版本发布后，将会重新发布性能测试报告。</p>
            </blockquote>
        </article>
        
    </div>
</body>
</html>
