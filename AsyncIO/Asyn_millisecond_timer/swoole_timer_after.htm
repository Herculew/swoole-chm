<html>
<head>
<title>swoole_timer_after</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
    SyntaxHighlighter.defaults['gutter'] = false;
    SyntaxHighlighter.defaults['toolbar'] = false;
    SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>swoole_timer_after</h1>
            
            <p>在指定的时间后执行函数，需要swoole-1.7.7以上版本。</p>
            <pre class="brush: php;">swoole_timer_after(int $after_time_ms, mixed $callback_function);
</pre>
            <p>swoole_timer_after函数是一个一次性定时器，执行完成后就会销毁。此函数与PHP标准库提供的sleep函数不同，after是非阻塞的。而sleep调用后会导致当前的进程进入阻塞，将无法处理新的请求。</p>
            <ul>
                <li>$after_time_ms 指定时间，单位为毫秒</li>
                <li>$callback_function
                    时间到期后所执行的函数，必须是可以调用的。callback函数不接受任何参数</li>
            </ul>
            <blockquote>
                <ul>
                    <li>$after_time_ms 最大不得超过 86400000</li>
                </ul>
            </blockquote>
            <h2>使用示例</h2>
            <pre class="brush: php;">swoole_timer_after(1000, function(){
    echo "timeout\n";
});
</pre>
        </article>
        
    </div>
</body>
</html>
