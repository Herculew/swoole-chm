<html>
<head>
<title>swoole_server::addtimer</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../public/css/Word2Chm.css" type="text/css">
<link rel="stylesheet" href="../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../public/styles/shThemeDefault.css" type="text/css" />
<script type="text/javascript" src="../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>swoole_server->addtimer</h1>
            
            <p>设置定时器。1.6.12版本前此函数不能用在消息队列模式下，1.6.12后消息队列IPC模式也可以使用定时器。</p>
            <pre class="brush: php;">bool swoole_server->addtimer(int $interval);
bool swoole_server_addtimer(swoole_server $serv, int $interval);
</pre>
            <p>第二个参数是定时器的间隔时间，单位为毫秒。swoole定时器的最小颗粒是1毫秒。支持多个定时器。此函数可以用于worker进程中。</p>
            <ul>
                <li>swoole1.6.5之前支持的单位是秒，所以1.6.5之前传入的参数为1，那在1.6.5后需要传入1000
                </li>
                <li>swoole1.6.5之后，addtimer必须在onStart/onWorkerStart/onConnect/onReceive/onClose等回调函数中才可以使用，否则会抛出错误。并且定时器无效
                </li>
                <li>注意不能存在2个相同间隔时间的定时器</li>
                <li>即使在代码中多次添加一个定时器，也只会有1个生效</li>
            </ul>
            <blockquote>
                <p>
                    1.7.5之后onStart回调中不再支持定时器<br />
                    建议使用tick定时器，addtimer定时器未来或将移除
                </p>
            </blockquote>
            <p>
                <strong>增加定时器后需要为Server设置onTimer回调函数，否则Server将无法启动</strong>。多个定时器都会回调此函数。在这个函数内需要自行switch，根据interval的值来判断是来自于哪个定时器。
            </p>
            <p>面向对象风格：</p>
            <pre class="brush: php;">$serv->addtimer(1000); //1s
$serv->addtimer(20); //20ms
</pre>
            <pre class="brush: php;">$serv->on('Timer', 'my_OnTimer');

function my_OnTimer($serv, $interval)
{
    echo "Timer[$interval] is call\n";
}
</pre>
<code>在版本1.8.0中已移除</code>
        </article>
        
    </div>
</body>
</html>
