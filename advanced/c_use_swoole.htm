<html>
<head>
<title>C/C++开发者如何使用Swoole</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../public/css/Word2Chm.css" type="text/css">
<link rel="stylesheet" href="../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../public/styles/shThemeDefault.css" type="text/css"/>
<script type="text/javascript" src="../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
    SyntaxHighlighter.defaults['gutter'] = false;
    SyntaxHighlighter.defaults['toolbar'] = false;
    SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>C/C++开发者如何使用Swoole</h1>
            
            <p>swoole使用cmake来做编译配置，示例程序在examples/server.c中。
                您可以在此基础上进行代码开发。 如果需要修改编译细节的选项，请直接修改CMakeLists.txt</p>
            <h2>Build &amp; Install</h2>
            <pre class="brush: php;">cmake .
make
make install
</pre>
            <h2>Example</h2>
            <p>示例代码：examples/server.c 在C/C++代码中只需要引入swoole头即可。</p>
            <pre class="brush: php;">#include &lt;swoole/Server.h&gt;
#include &lt;swoole/Client.h&gt;

int main() 
{
    swServer serv;
    swServer_create(&amp;serv);
    serv.onStart = my_onStart;    
    ...
    swServer_start(&amp;serv);
}
</pre>
            <p>编译运行</p>
            <pre class="brush: php;">gcc -o server server.c -lswoole
./server
</pre>
        </article>
        
    </div>
</body>
</html>
